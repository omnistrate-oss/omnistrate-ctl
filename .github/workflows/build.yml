name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  merge_group:
    branches: [ "master" ]

env:
  GOPRIVATE: "github.com/omnistrate/*"
  GOPROXY: ${{ secrets.GOPROXY }}
  GOSUMDB: ${{ secrets.GOSUMDB }}
  # test coverage threshold
  TESTCOVERAGE_THRESHOLD: 6
  # integration test variables
  IAM_ROLE_ARN: arn:aws:iam::469745361314:role/github-actions-s3-store-test-role
  IAM_ROLE_SESSION_DURATION: 900
  AWS_REGION: us-west-2

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  # security scan is included in linter
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a
        with:
          app_id: ${{ secrets.CI_APP_ID }}
          private_key: ${{ secrets.CI_APP_PRIVATE_KEY }}

      - name: Configure git for private repo access
        env:
          GH_ACCESS_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "machine github.com login api password ${GH_ACCESS_TOKEN}" > ~/.netrc

      - name: Set up go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          token: ${{ steps.generate_token.outputs.token }}
          cache-dependency-path: '**/go.sum'

      - name: Get dependencies
        timeout-minutes: 10
        run: |
          make tidy

      - name: golangci-lint
        timeout-minutes: 20
        uses: golangci/golangci-lint-action@v6
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: v1.56.2
          args: ./... --timeout=10m
          skip-cache: true
          only-new-issues: ${{ github.event_name == 'pull_request' || github.event_name == 'merge_group' }}
          install-mode: "goinstall"

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a
        with:
          app_id: ${{ secrets.CI_APP_ID }}
          private_key: ${{ secrets.CI_APP_PRIVATE_KEY }}

      - name: Configure git for private repo access
        env:
          GH_ACCESS_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "machine github.com login api password ${GH_ACCESS_TOKEN}" > ~/.netrc

      - name: Check dependencies
        timeout-minutes: 10
        run: | 
          make check-dependencies

      - name: Set up go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          token: ${{ steps.generate_token.outputs.token }}
          cache-dependency-path: '**/go.sum'

      - name: Get dependencies
        timeout-minutes: 10
        run: |
         GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} make tidy

      - name: Build
        timeout-minutes: 20
        run: |
         GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} make build

      - name: Gotestsum installer
        uses: autero1/action-gotestsum@v2.0.0
        with:
          gotestsum_version: 1.11.0

      - name: Unit test
        timeout-minutes: 20 
        run: |
          gotestsum --format github-actions -- ./... -skip test -cover -coverprofile coverage.out -covermode count
          go tool cover -func=coverage.out -o coverage-report.txt

      - name: Test coverage check
        timeout-minutes: 10
        run: |
          cat coverage-report.txt | grep total | awk '{print $$3}' | sed 's/[%]//g' | awk '{if ($$1 < $TESTCOVERAGE_THRESHOLD) {print "Test coverage is below threshold"; exit 1} else {print "Test coverage is above threshold"}}'
  
  smoke-tests:
    environment: Dev-us-west-2
    if: github.event_name != 'push'
    needs: [build, lint]
    runs-on: ubuntu-latest
    permissions:
      contents: read

    concurrency:
      group: ${{ github.workflow }}-Dev-us-west-2
      cancel-in-progress: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a
        with:
          app_id: ${{ secrets.CI_APP_ID }}
          private_key: ${{ secrets.CI_APP_PRIVATE_KEY }}

      - name: Configure git for private repo access
        env:
          GH_ACCESS_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          echo "machine github.com login api password ${GH_ACCESS_TOKEN}" > ~/.netrc

      - name: Set up go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          token: ${{ steps.generate_token.outputs.token }}
          cache-dependency-path: '**/go.sum'

      - name: Get dependencies
        timeout-minutes: 10
        run: |
          make tidy

      - name: Build
        timeout-minutes: 20
        run: |
          make build

      - name: Gotestsum installer
        uses: autero1/action-gotestsum@v2.0.0
        with:
          gotestsum_version: 1.11.0

      - name: Smoke test
        timeout-minutes: 30
        env: 
          ENABLE_SMOKE_TEST: true
          SMOKE_TEST_EMAIL: ${{ secrets.SMOKE_TEST_EMAIL }}
          SMOKE_TEST_PASSWORD: ${{ secrets.SMOKE_TEST_PASSWORD}}
          OMNISTRATE_ROOT_DOMAIN: ${{ vars.OMNISTRATE_ROOT_DOMAIN}}
          LOG_LEVEL: debug
          LOG_FORMAT: pretty
          DRY_RUN: true
        run: gotestsum --format github-actions -- ./... -timeout 1800s -p 1 -p 1 -v

  publish:
    if: github.event_name == 'push'
    needs: [build, lint]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: Publish-'${{ github.workflow }}'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
