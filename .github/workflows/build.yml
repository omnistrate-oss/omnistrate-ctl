name: Build

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  merge_group:
    branches: ["main"]

env:
  # test coverage threshold
  GOLANG_CI_VERSION: v2.4.0

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  # security scan is included in linter
  lint:
    if : github.event_name != 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up go
        uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"
          cache-dependency-path: "**/go.sum"

      - name: Get dependencies
        timeout-minutes: 10
        run: |
          make download

      - name: golangci-lint
        timeout-minutes: 20
        uses: golangci/golangci-lint-action@v8
        with:
          version: ${{ env.GOLANG_CI_VERSION }}
          args: ./...
          skip-cache: true

  build:
    if : github.event_name != 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: read

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Check dependencies
        timeout-minutes: 10
        run: |
          make check-dependencies

      - name: Get dependencies
        timeout-minutes: 10
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} make download

      - name: Build
        timeout-minutes: 20
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} make build

      - name: Gotestsum installer
        uses: autero1/action-gotestsum@v2.0.0
        with:
          gotestsum_version: 1.13.0

      - name: Unit test
        timeout-minutes: 20
        run: |
          gotestsum --format github-actions -- ./... -skip test

  integration-tests:
    environment: Dev-us-west-2
    if: github.event_name != 'push'
    needs: [build, lint]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    concurrency:
      group: ${{ github.workflow }}-integration-tests
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up go
        uses: actions/setup-go@v6
        with:
          go-version-file: "go.mod"
          cache-dependency-path: "**/go.sum"

      - name: Get dependencies
        timeout-minutes: 10
        run: |
          make download

      - name: Gotestsum installer
        uses: autero1/action-gotestsum@v2.0.0
        with:
          gotestsum_version: 1.11.0

      - name: Integraiton test
        timeout-minutes: 30
        env:
          ENABLE_INTEGRATION_TEST: true
          TEST_EMAIL: ${{ secrets.SMOKE_TEST_EMAIL }}
          TEST_PASSWORD: ${{ secrets.SMOKE_TEST_PASSWORD}}
          OMNISTRATE_ROOT_DOMAIN: ${{ vars.OMNISTRATE_ROOT_DOMAIN}}
          OMNISTRATE_DRY_RUN: true
        run: gotestsum --format github-actions -- ./test/integration_test/... -timeout 1800s -p 1 -p 1 -v

  smoke-tests:
    if: github.event_name != 'push'
    needs: [build, lint]
    uses: ./.github/workflows/smoke-tests.yml
    with:
      environment: Dev-us-west-2
    secrets: inherit
    permissions:
      contents: read

  publish:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: Publish-'${{ github.workflow }}'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
