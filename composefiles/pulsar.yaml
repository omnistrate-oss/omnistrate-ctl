# Logo: https://pbs.twimg.com/profile_images/875130220474359809/wFcLUbwd_400x400.jpg
version: '3'
x-omnistrate-integrations:
  - omnistrateLogging
  - omnistrateMetrics
services:
  pulsar-bookie:
    x-omnistrate-mode-internal: true
    x-omnistrate-compute:
      instanceTypes:
        - name: t3.medium
          cloudProvider: aws
        - name: e2-medium
          cloudProvider: gcp
    environment:
      SECURITY_CONTEXT_USER_ID: '0'
      SECURITY_CONTEXT_GROUP_ID: '0'
      SECURITY_CONTEXT_FS_GROUP: '0'
      PULSAR_GC: '-XX:+UseG1GC -XX:MaxGCPauseMillis=10 -XX:+ParallelRefProcEnabled
        -XX:+UnlockExperimentalVMOptions -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=4
        -XX:ConcGCThreads=4 -XX:G1NewSizePercent=50 -XX:+DisableExplicitGC -XX:-ResizePLAB
        -XX:+ExitOnOutOfMemoryError -XX:+PerfDisableSharedMem'
      PULSAR_MEM: '-Xms128m -Xmx256m -XX:MaxDirectMemorySize=256m'
      PULSAR_PREFIX_journalDirectories: /pulsar/data/bookkeeper/journal
      autoRecoveryDaemonEnabled: 'false'
      dbStorage_readAheadCacheMaxSizeMb: '32'
      dbStorage_rocksDB_blockCacheSize: '8388608'
      dbStorage_rocksDB_writeBufferSizeMB: '8'
      dbStorage_writeCacheMaxSizeMb: '32'
      httpServerEnabled: 'true'
      httpServerPort: '8000'
      journalDirectories: /pulsar/data/bookkeeper/journal
      journalMaxBackups: '0'
      ledgerDirectories: /pulsar/data/bookkeeper/ledgers
      statsProviderClass: org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider
      useHostNameAsBookieID: 'true'
      zkLedgersRootPath: /ledgers
      zkServers: pulsar-zookeeper:2181
    x-omnistrate-api-params:
      - key: dummy
        description: Dummy
        name: dummy
        type: String
        export: false
        required: false
        modifiable: false
        defaultValue: dummy
    image: ghcr.io/omnistrate/demos-pulsar:v1.0.0-bookie
    volumes:
      - "journal:/pulsar/data/bookkeeper/journal"
      - "ledgers:/pulsar/data/bookkeeper/ledgers"
    depends_on:
      - pulsar-zookeeper
  pulsar-broker:
    x-omnistrate-mode-internal: false
    x-omnistrate-compute:
      instanceTypes:
        - name: t3.medium
          cloudProvider: aws
        - name: e2-medium
          cloudProvider: gcp
    image: ghcr.io/omnistrate/demos-pulsar:v1.0.0-broker
    depends_on:
      - pulsar-zookeeper
      - pulsar-bookie
    ports:
      - 8081:8080
      - 6651:6650
    environment:
      SECURITY_CONTEXT_USER_ID: '0'
      SECURITY_CONTEXT_GROUP_ID: '0'
      SECURITY_CONTEXT_FS_GROUP: '0'
      PF_connectorsDirectory: ./connectors
      PF_containerFactory: k8s
      PF_functionRuntimeFactoryConfigs_changeConfigMap: pulsar-functions-worker-config
      PF_functionRuntimeFactoryConfigs_changeConfigMapNamespace: $INSTANCE_ID
      PF_functionRuntimeFactoryConfigs_expectedMetricsCollectionInterval: '30'
      PF_functionRuntimeFactoryConfigs_installUserCodeDependencies: 'true'
      PF_functionRuntimeFactoryConfigs_jobNamespace: $INSTANCE_ID
      PF_functionRuntimeFactoryConfigs_pulsarAdminUrl: http://pulsar-broker:8080/
      PF_functionRuntimeFactoryConfigs_pulsarDockerImageName: apachepulsar/pulsar-all:2.10.4
      PF_functionRuntimeFactoryConfigs_pulsarRootDir: /pulsar
      PF_functionRuntimeFactoryConfigs_pulsarServiceUrl: pulsar://pulsar-broker:6650/
      PF_functionRuntimeFactoryConfigs_submittingInsidePod: 'true'
      PF_kubernetesContainerFactory_changeConfigMap: pulsar-functions-worker-config
      PF_kubernetesContainerFactory_changeConfigMapNamespace: $INSTANCE_ID
      PF_kubernetesContainerFactory_expectedMetricsCollectionInterval: '30'
      PF_kubernetesContainerFactory_installUserCodeDependencies: 'true'
      PF_kubernetesContainerFactory_jobNamespace: $INSTANCE_ID
      PF_kubernetesContainerFactory_pulsarAdminUrl: http://pulsar-broker:8080/
      PF_kubernetesContainerFactory_pulsarDockerImageName: apachepulsar/pulsar-all:2.10.4
      PF_kubernetesContainerFactory_pulsarRootDir: /pulsar
      PF_kubernetesContainerFactory_pulsarServiceUrl: pulsar://pulsar-broker:6650/
      PF_kubernetesContainerFactory_submittingInsidePod: 'true'
      PF_numFunctionPackageReplicas: '1'
      PF_pulsarFunctionsCluster: pulsar
      PULSAR_GC: '-XX:+UseG1GC -XX:MaxGCPauseMillis=10 -Dio.netty.leakDetectionLevel=disabled
        -Dio.netty.recycler.linkCapacity=1024 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions
        -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=4 -XX:ConcGCThreads=4 -XX:G1NewSizePercent=50
        -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+ExitOnOutOfMemoryError -XX:+PerfDisableSharedMem'
      PULSAR_MEM: '-Xms128m -Xmx256m -XX:MaxDirectMemorySize=256m'
      brokerServicePort: '6650'
      clusterName: pulsar
      configurationStoreServers: pulsar-zookeeper:2181
      exposeTopicLevelMetricsInPrometheus: 'true'
      functionsWorkerEnabled: 'true'
      managedLedgerDefaultAckQuorum: '1'
      managedLedgerDefaultEnsembleSize: '1'
      managedLedgerDefaultWriteQuorum: '1'
      numHttpServerThreads: '8'
      statusFilePath: /pulsar/status
      webServicePort: '8080'
      zooKeeperSessionTimeoutMillis: '30000'
      zookeeperServers: pulsar-zookeeper:2181
    x-omnistrate-api-params:
      - key: dummy
        description: Dummy
        name: dummy
        type: String
        export: false
        required: false
        modifiable: false
        defaultValue: dummy
  pulsar-proxy:
    x-omnistrate-mode-internal: true
    x-omnistrate-compute:
      instanceTypes:
        - name: t3.medium
          cloudProvider: aws
        - name: e2-medium
          cloudProvider: gcp
    environment:
      SECURITY_CONTEXT_USER_ID: '0'
      SECURITY_CONTEXT_GROUP_ID: '0'
      SECURITY_CONTEXT_FS_GROUP: '0'
      PULSAR_GC: '-XX:+UseG1GC -XX:MaxGCPauseMillis=10 -Dio.netty.leakDetectionLevel=disabled
        -Dio.netty.recycler.linkCapacity=1024 -XX:+ParallelRefProcEnabled -XX:+UnlockExperimentalVMOptions
        -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=4 -XX:ConcGCThreads=4 -XX:G1NewSizePercent=50
        -XX:+DisableExplicitGC -XX:-ResizePLAB -XX:+ExitOnOutOfMemoryError -XX:+PerfDisableSharedMem'
      PULSAR_MEM: '-Xms64m -Xmx64m -XX:MaxDirectMemorySize=64m'
      brokerServiceURL: pulsar://pulsar-broker:6650
      brokerWebServiceURL: http://pulsar-broker:8080
      clusterName: pulsar
      httpNumThreads: '8'
      servicePort: '6650'
      statusFilePath: /pulsar/status
      webServicePort: '8080'
    image: ghcr.io/omnistrate/demos-pulsar:v1.0.0-proxy
    depends_on:
      - pulsar-broker
    ports:
      - 80:80
      - 6652:6650
    x-omnistrate-api-params:
      - key: dummy
        description: Dummy
        name: dummy
        type: String
        export: false
        required: false
        modifiable: false
        defaultValue: dummy
  pulsar-recovery:
    x-omnistrate-mode-internal: true
    x-omnistrate-compute:
      instanceTypes:
        - name: t3.medium
          cloudProvider: aws
        - name: e2-medium
          cloudProvider: gcp
    environment:
      SECURITY_CONTEXT_USER_ID: '0'
      SECURITY_CONTEXT_GROUP_ID: '0'
      SECURITY_CONTEXT_FS_GROUP: '0'
      BOOKIE_MEM: '-Xms64m -Xmx64m'
      PULSAR_PREFIX_useV2WireProtocol: 'true'
      httpServerEnabled: 'true'
      httpServerPort: '8000'
      statsProviderClass: org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider
      useHostNameAsBookieID: 'true'
      zkLedgersRootPath: /ledgers
      zkServers: pulsar-zookeeper:2181
    image: ghcr.io/omnistrate/demos-pulsar:v1.0.0-recovery
    depends_on:
      - pulsar-broker
    x-omnistrate-api-params:
      - key: dummy
        description: Dummy
        name: dummy
        type: String
        export: false
        required: false
        modifiable: false
        defaultValue: dummy
  pulsar-toolset:
    x-omnistrate-mode-internal: true
    x-omnistrate-compute:
      instanceTypes:
        - name: t3.medium
          cloudProvider: aws
        - name: e2-medium
          cloudProvider: gcp
    environment:
      SECURITY_CONTEXT_USER_ID: '0'
      SECURITY_CONTEXT_GROUP_ID: '0'
      SECURITY_CONTEXT_FS_GROUP: '0'
      BOOKIE_LOG_APPENDER: RollingFile
      PULSAR_MEM: '-Xms64M -Xmx128M -XX:MaxDirectMemorySize=128M'
      brokerServiceUrl: pulsar://pulsar-proxy:6650/
      httpServerEnabled: 'true'
      httpServerPort: '8000'
      statsProviderClass: org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider
      useHostNameAsBookieID: 'true'
      webServiceUrl: http://pulsar-proxy:80/
      zkLedgersRootPath: /ledgers
      zkServers: pulsar-zookeeper:2181
    image: ghcr.io/omnistrate/demos-pulsar:v1.0.0-toolset
    depends_on:
      - pulsar-broker
    x-omnistrate-api-params:
      - key: dummy
        description: Dummy
        name: dummy
        type: String
        export: false
        required: false
        modifiable: false
        defaultValue: dummy
  pulsar-manager:
    x-omnistrate-mode-internal: true
    x-omnistrate-capabilities:
      httpReverseProxy:
        targetPort: 9527
    x-omnistrate-compute:
      instanceTypes:
        - name: t3.medium
          cloudProvider: aws
        - name: e2-medium
          cloudProvider: gcp
    x-omnistrate-actionhooks:
      - scope: CLUSTER
        type: INIT
        commandTemplate: |
          #### Manager INIT
          set -ex
          CSRF_TOKEN=$(curl http://pulsar-manager:7750/pulsar-manager/csrf-token)
          curl \
             -H 'X-XSRF-TOKEN: $CSRF_TOKEN' \
             -H 'Cookie: XSRF-TOKEN=$CSRF_TOKEN;' \
             -H "Content-Type: application/json" \
             -X PUT http://pulsar-manager:7750/pulsar-manager/users/superuser \
             -d '{"name": "admin", "password": "apachepulsar", "description": "test", "email": "username@test.org"}'

    image: apachepulsar/pulsar-manager:v0.3.0
    environment:
      SECURITY_CONTEXT_USER_ID: '0'
      SECURITY_CONTEXT_GROUP_ID: '0'
      SECURITY_CONTEXT_FS_GROUP: '0'
      SPRING_CONFIGURATION_FILE: /pulsar-manager/pulsar-manager/application.properties
    ports:
      - 9527:9527
    depends_on:
      - pulsar-broker
    x-omnistrate-api-params:
      - key: dummy
        description: Dummy
        name: dummy
        type: String
        export: false
        required: false
        modifiable: false
        defaultValue: dummy
  pulsar-zookeeper:
    environment:
      SECURITY_CONTEXT_USER_ID: '0'
      SECURITY_CONTEXT_GROUP_ID: '0'
      SECURITY_CONTEXT_FS_GROUP: '0'
      PULSAR_GC: '-XX:+UseG1GC -XX:MaxGCPauseMillis=10 -XX:+ParallelRefProcEnabled
        -XX:+UnlockExperimentalVMOptions -XX:+DoEscapeAnalysis -XX:ParallelGCThreads=4
        -XX:ConcGCThreads=4 -XX:G1NewSizePercent=50 -XX:+DisableExplicitGC -XX:-ResizePLAB
        -XX:+ExitOnOutOfMemoryError -XX:+PerfDisableSharedMem'
      PULSAR_MEM: '-Xms128m -Xmx256m -XX:MaxDirectMemorySize=256m'
      PULSAR_PREFIX_journalDirectories: /pulsar/data/bookkeeper/journal
      autoRecoveryDaemonEnabled: 'false'
      dbStorage_readAheadCacheMaxSizeMb: '32'
      dbStorage_rocksDB_blockCacheSize: '8388608'
      dbStorage_rocksDB_writeBufferSizeMB: '8'
      dbStorage_writeCacheMaxSizeMb: '32'
      httpServerEnabled: 'true'
      httpServerPort: '8000'
      journalDirectories: /pulsar/data/bookkeeper/journal
      journalMaxBackups: '0'
      ledgerDirectories: /pulsar/data/bookkeeper/ledgers
      statsProviderClass: org.apache.bookkeeper.stats.prometheus.PrometheusMetricsProvider
      useHostNameAsBookieID: 'true'
      zkLedgersRootPath: /ledgers
      zkServers: pulsar-zookeeper:2181
    x-omnistrate-mode-internal: true
    x-omnistrate-actionhooks:
      - scope: CLUSTER
        type: INIT
        commandTemplate: |
          #### BOOKIE INIT
          set -ex
          
          # Run the apply-config-from-env.py script
          /pulsar/bin/apply-config-from-env.py conf/bookkeeper.conf
          
          # Check if Bookkeeper cluster is already initialized
          if /pulsar/bin/bookkeeper shell whatisinstanceid; then
              echo "bookkeeper cluster already initialized"
          else
              # Initialize a new Bookkeeper cluster
              /pulsar/bin/bookkeeper shell initnewcluster
          fi
          
          #### PULSAR INIT
          # Initialize Pulsar cluster metadata
          /pulsar/bin/pulsar initialize-cluster-metadata \
            --cluster pulsar \
            --zookeeper pulsar-zookeeper:2181 \
            --configuration-store pulsar-zookeeper:2181 \
            --web-service-url http://pulsar-broker:8080/ \
            --web-service-url-tls https://pulsar-broker:8443/ \
            --broker-service-url pulsar://pulsar-broker:6650/ \
            --broker-service-url-tls pulsar+ssl://pulsar-broker.svc.cluster.local:6651/

    x-omnistrate-compute:
      instanceTypes:
        - name: t3.medium
          cloudProvider: aws
        - name: e2-medium
          cloudProvider: gcp
    image: ghcr.io/omnistrate/demos-pulsar:v1.0.0-zookeeper
    volumes:
      - "zk-data:/pulsar/data"
    ports:
      - 8000:8000
      - 2888:2888
      - 3888:3888
      - 2181:2181
    x-omnistrate-api-params:
      - key: dummy
        description: Dummy
        name: dummy
        type: String
        export: false
        required: false
        modifiable: false
        defaultValue: dummy

volumes:
  journal:
  ledgers:
  zk-data: